# Generated by Django 2.2.7 on 2020-02-07 11:22

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('unique_id', models.CharField(max_length=50)),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('name', models.TextField(default=None, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='GenericPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=200)),
                ('price', models.PositiveIntegerField()),
                ('short_description', models.CharField(max_length=250)),
                ('date_created', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PlanRegistration',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('plan_name', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='user-profile-picture')),
                ('expired', models.DateTimeField()),
                ('date_registered', models.DateTimeField(default=django.utils.timezone.now)),
                ('json', models.TextField()),
            ],
            options={
                'ordering': ['-id'],
            },
            bases=('app_enrollment.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.PositiveIntegerField()),
                ('office_name', models.CharField(blank=True, max_length=250, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_enrollment.Department')),
            ],
            options={
                'ordering': ['-id'],
            },
            bases=('app_enrollment.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dependent',
            fields=[
                ('enrollee_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('phone', models.PositiveIntegerField(default=None)),
                ('date_of_birth', models.DateField()),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced')], max_length=20)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=20)),
                ('nationality', models.CharField(max_length=50)),
                ('national_identity_number', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=25)),
                ('lga', models.CharField(max_length=35, verbose_name='local_government')),
                ('state_of_residence', models.CharField(max_length=50)),
                ('genotype', models.CharField(choices=[('AS', 'AS'), ('SS', 'SS'), ('AA', 'AA')], max_length=3)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=10)),
                ('disability', models.CharField(choices=[('None', 'None'), ('Visual Impairment', 'Visual Impairment'), ('Hearing Impairment', 'Hearing Impairment'), ('Intellectual Impairment', 'Intellectual Impairment'), ('Physical Impairment', 'Physical Impairment')], max_length=50)),
                ('allergies', models.CharField(max_length=50)),
                ('chronic_condition', models.CharField(max_length=50)),
                ('nok_first_name', models.CharField(max_length=50)),
                ('nok_last_name', models.CharField(max_length=50)),
                ('nok_middle_name', models.CharField(max_length=50)),
                ('relationship_with_nok', models.CharField(max_length=50)),
                ('nok_nationality', models.CharField(max_length=50)),
                ('nok_state_of_origin', models.CharField(max_length=50)),
                ('nok_lga_of_origin', models.CharField(max_length=50)),
                ('nok_state_of_residence', models.CharField(max_length=50)),
                ('nok_residential_address', models.CharField(max_length=50)),
                ('nok_email', models.EmailField(max_length=254, null=True)),
                ('nok_phone', models.PositiveIntegerField()),
                ('activated', models.BooleanField(default=True)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_enrollment.PlanRegistration')),
            ],
            options={
                'ordering': ['enrollee_id'],
            },
        ),
    ]
